# Generated by Django 5.1.4 on 2025-05-02 01:52

import autoslug.fields
import django.core.validators
import django.db.models.deletion
import multiselectfield.db.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Apps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('app_name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillingSystemMappingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_system_file_name', models.CharField(max_length=200)),
                ('input_source', models.JSONField(default=dict)),
                ('mrn', models.JSONField(default=dict)),
                ('patient_id', models.JSONField(default=dict)),
                ('account_number', models.JSONField(default=dict)),
                ('visit_number', models.JSONField(default=dict)),
                ('chart_number', models.JSONField(default=dict)),
                ('facility', models.JSONField(default=dict)),
                ('facility_type', models.JSONField(default=dict)),
                ('patient_last_name', models.JSONField(default=dict)),
                ('patient_first_name', models.JSONField(default=dict)),
                ('patient_phone', models.JSONField(default=dict)),
                ('patient_address', models.JSONField(default=dict)),
                ('patient_city', models.JSONField(default=dict)),
                ('patient_state', models.JSONField(default=dict)),
                ('patient_zip', models.JSONField(default=dict)),
                ('patient_birthday', models.JSONField(default=dict)),
                ('patient_gender', models.JSONField(default=dict)),
                ('subscriber_last_name', models.JSONField(default=dict)),
                ('subscriber_first_name', models.JSONField(default=dict)),
                ('subscriber_relationship', models.JSONField(default=dict)),
                ('subscriber_phone', models.JSONField(default=dict)),
                ('subscriber_address', models.JSONField(default=dict)),
                ('subscriber_city', models.JSONField(default=dict)),
                ('subscriber_state', models.JSONField(default=dict)),
                ('subscriber_zip', models.JSONField(default=dict)),
                ('subscriber_birthday', models.JSONField(default=dict)),
                ('subscriber_gender', models.JSONField(default=dict)),
                ('current_billed_financial_class', models.JSONField(default=dict)),
                ('current_billed_payer_name', models.JSONField(default=dict)),
                ('member_id_current_billed_payer', models.JSONField(default=dict)),
                ('group_number_current_billed_payer', models.JSONField(default=dict)),
                ('current_billed_relationship', models.JSONField(default=dict)),
                ('cob', models.JSONField(default=dict)),
                ('payer_id_current_billed_payer', models.JSONField(default=dict)),
                ('timely_filing_limit', models.JSONField(default=dict)),
                ('appeal_limit', models.JSONField(default=dict)),
                ('primary_payer_financial_class', models.JSONField(default=dict)),
                ('primary_payer_name', models.JSONField(default=dict)),
                ('member_id_primary_payer', models.JSONField(default=dict)),
                ('group_number_primary_payer', models.JSONField(default=dict)),
                ('relationship_primary_payer', models.JSONField(default=dict)),
                ('cob_primary', models.JSONField(default=dict)),
                ('payer_id_primary_payer', models.JSONField(default=dict)),
                ('secondary_payer_financial_class', models.JSONField(default=dict)),
                ('secondary_payer_name', models.JSONField(default=dict)),
                ('member_id_secondary_payer', models.JSONField(default=dict)),
                ('group_number_secondary_payer', models.JSONField(default=dict)),
                ('relationship_secondary_payer', models.JSONField(default=dict)),
                ('cob_secondary', models.JSONField(default=dict)),
                ('payer_id_secondary_payer', models.JSONField(default=dict)),
                ('tertiary_payer_financial_class', models.JSONField(default=dict)),
                ('tertiary_payer_name', models.JSONField(default=dict)),
                ('member_id_tertiary_payer', models.JSONField(default=dict)),
                ('group_number_tertiary_payer', models.JSONField(default=dict)),
                ('relationship_tertiary_payer', models.JSONField(default=dict)),
                ('cob_tertiary', models.JSONField(default=dict)),
                ('payer_id_tertiary_payer', models.JSONField(default=dict)),
                ('auth_number', models.JSONField(default=dict)),
                ('claim_number', models.JSONField(default=dict)),
                ('facility_code', models.JSONField(default=dict)),
                ('claim_frequency_type', models.JSONField(default=dict)),
                ('signature', models.JSONField(default=dict)),
                ('assignment_code', models.JSONField(default=dict)),
                ('assign_certification', models.JSONField(default=dict)),
                ('release_info_code', models.JSONField(default=dict)),
                ('service_date', models.JSONField(default=dict)),
                ('van_trace_number', models.JSONField(default=dict)),
                ('rendering_provider_id', models.JSONField(default=dict)),
                ('taxonomy_code', models.JSONField(default=dict)),
                ('procedure_code', models.JSONField(default=dict)),
                ('amount', models.JSONField(default=dict)),
                ('procedure_count', models.JSONField(default=dict)),
                ('tooth_code', models.JSONField(default=dict)),
                ('procedure_code2', models.JSONField(default=dict)),
                ('amount2', models.JSONField(default=dict)),
                ('procedure_count2', models.JSONField(default=dict)),
                ('tooth_code2', models.JSONField(default=dict)),
                ('procedure_code3', models.JSONField(default=dict)),
                ('amount3', models.JSONField(default=dict)),
                ('procedure_count3', models.JSONField(default=dict)),
                ('tooth_code3', models.JSONField(default=dict)),
                ('procedure_code4', models.JSONField(default=dict)),
                ('amount4', models.JSONField(default=dict)),
                ('procedure_count4', models.JSONField(default=dict)),
                ('tooth_code4', models.JSONField(default=dict)),
                ('dx1', models.JSONField(default=dict)),
                ('dx2', models.JSONField(default=dict)),
                ('dx3', models.JSONField(default=dict)),
                ('dx4', models.JSONField(default=dict)),
                ('dx5', models.JSONField(default=dict)),
                ('dx6', models.JSONField(default=dict)),
                ('total_charged', models.JSONField(default=dict)),
                ('check_number', models.JSONField(default=dict)),
                ('insurance_balance', models.JSONField(default=dict)),
                ('patient_balance', models.JSONField(default=dict)),
                ('contract_name', models.JSONField(default=dict)),
                ('division', models.JSONField(default=dict)),
                ('type_of_service', models.JSONField(default=dict)),
                ('current_queue', models.JSONField(blank=True, default=dict)),
                ('queue_days', models.JSONField(blank=True, default=dict)),
                ('latest_action_date', models.JSONField(blank=True, default=dict)),
                ('next_follow_up_before', models.JSONField(blank=True, default=dict)),
                ('claim_denial_date', models.JSONField(default=dict)),
                ('claim_denial_code', models.JSONField(default=dict)),
                ('claim_denial_description', models.JSONField(default=dict)),
                ('latest_pay_date', models.JSONField(blank=True, default=dict)),
                ('latest_pay_amount', models.JSONField(blank=True, default=dict)),
                ('claim_priority', models.JSONField(blank=True, default=dict)),
                ('category', models.JSONField(blank=True, default=dict)),
                ('sub_category', models.JSONField(blank=True, default=dict)),
                ('status', models.JSONField(blank=True, default=dict)),
                ('action', models.JSONField(blank=True, default=dict)),
                ('provider_name', models.JSONField(blank=True, default=dict)),
                ('provider_npi', models.JSONField(blank=True, default=dict)),
                ('provider_location', models.JSONField(blank=True, default=dict)),
                ('assigned_to', models.JSONField(blank=True, default=dict)),
                ('last_claim_status_check_date', models.JSONField(blank=True, default=dict)),
                ('last_ev_check_date', models.JSONField(blank=True, default=dict)),
                ('last_ins_disc_check_date', models.JSONField(blank=True, default=dict)),
                ('under_pay', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client_name', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_client_slug', unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomBins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_bin_slug', unique=True)),
                ('name', models.CharField(max_length=225)),
                ('threshold', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department_name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_department_slug', unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalApps',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('app_name', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical apps',
                'verbose_name_plural': 'historical appss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClients',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('client_name', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_client_slug')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical clients',
                'verbose_name_plural': 'historical clientss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCustomBins',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('title', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_bin_slug')),
                ('name', models.CharField(max_length=225)),
                ('threshold', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical custom bins',
                'verbose_name_plural': 'historical custom binss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDepartments',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('department_name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_department_slug')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical departments',
                'verbose_name_plural': 'historical departmentss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrganizations',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('organization_name', models.CharField(db_index=True, max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical organizations',
                'verbose_name_plural': 'historical organizationss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProjects',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('project_name', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_project_slug')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical projects',
                'verbose_name_plural': 'historical projectss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRoles',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('role_name', models.CharField(db_index=True, max_length=255)),
                ('screens', multiselectfield.db.fields.MultiSelectField(choices=[('Roles', 'Roles'), ('Admin', 'Admin'), ('Departments', 'Departments'), ('Projects', 'Projects'), ('Clients', 'Clients'), ('Organizations', 'Organizations'), ('Stake', 'Stake'), ('Apps', 'Apps'), ('Upload', 'Upload'), ('Zero-Upload', 'Zero-Upload'), ('Billing-System', 'Billing-System'), ('Allocation-Ar', 'Allocation-Ar'), ('Allocation-Denials', 'Allocation-Denials'), ('Allocation-Ect', 'Allocation-Ect'), ('Allocation-Corresponding', 'Allocation-Corresponding'), ('Executive-Ar', 'Executive-Ar'), ('Executive-Denials', 'Executive-Denials'), ('Executive-Ect', 'Executive-Ect'), ('Executive-Corresponding', 'Executive-Corresponding'), ('Review-Ar', 'Review-Ar'), ('Review-Coding', 'Review-Coding'), ('Review-Payments', 'Review-Payments'), ('Review-Corresponding', 'Review-Corresponding'), ('Review-Billing', 'Review-Billing'), ('Review-Credential', 'Review-Credential'), ('Organization-Rules', 'Organization-Rules'), ('Ops-Rules', 'Ops-Rules'), ('Sop-Rules', 'Sop-Rules'), ('View-Rules', 'View-Rules'), ('Approvals', 'Approvals'), ('HoldQ', 'HoldQ'), ('Create-Codes', 'Create-Codes'), ('View-Sop-Rules', 'View-Sop-Rules'), ('Custom-Bins', 'Custom-Bins'), ('User-Allocation-Bins-Records', 'User-Allocation-Bins-Records')], max_length=470)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_role_slug')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical roles',
                'verbose_name_plural': 'historical roless',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStakes',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('stake_name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_stakes_slug')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical stakes',
                'verbose_name_plural': 'historical stakess',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTargetSettings',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('title', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_target_slug')),
                ('records_target_count', models.PositiveBigIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('total_working_hours', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical target settings',
                'verbose_name_plural': 'historical target settingss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserCredentialsSetup',
            fields=[
                ('baseuser_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(db_index=True, max_length=255)),
                ('password', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('user_type', models.CharField(choices=[('AdminUser', 'AdminUser'), ('StaffUser', 'StaffUser')], default='StaffUser', max_length=255)),
                ('employee_id', models.CharField(db_index=True, max_length=255)),
                ('approve_1_employee_id', models.CharField(blank=True, max_length=255)),
                ('approve_2_employee_id', models.CharField(blank=True, max_length=255)),
                ('experience_level', models.CharField(choices=[('Lateral', 'Lateral'), ('Fresher', 'Fresher')], max_length=55)),
                ('user_date_of_joining', models.DateField(blank=True, editable=False)),
                ('pip_level_flag', models.BooleanField(default=False)),
                ('pip_start_date', models.DateField(blank=True, null=True)),
                ('pip_end_date', models.DateField(blank=True, null=True)),
                ('pip_level', models.CharField(blank=True, choices=[('Level1', 'Level1'), ('Level2', 'Level2'), ('Level3', 'Level3'), ('Level4', 'Level4')], max_length=55, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical user credentials setup',
                'verbose_name_plural': 'historical User Credentials',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project_name', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_project_slug', unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role_name', models.CharField(max_length=255, unique=True)),
                ('screens', multiselectfield.db.fields.MultiSelectField(choices=[('Roles', 'Roles'), ('Admin', 'Admin'), ('Departments', 'Departments'), ('Projects', 'Projects'), ('Clients', 'Clients'), ('Organizations', 'Organizations'), ('Stake', 'Stake'), ('Apps', 'Apps'), ('Upload', 'Upload'), ('Zero-Upload', 'Zero-Upload'), ('Billing-System', 'Billing-System'), ('Allocation-Ar', 'Allocation-Ar'), ('Allocation-Denials', 'Allocation-Denials'), ('Allocation-Ect', 'Allocation-Ect'), ('Allocation-Corresponding', 'Allocation-Corresponding'), ('Executive-Ar', 'Executive-Ar'), ('Executive-Denials', 'Executive-Denials'), ('Executive-Ect', 'Executive-Ect'), ('Executive-Corresponding', 'Executive-Corresponding'), ('Review-Ar', 'Review-Ar'), ('Review-Coding', 'Review-Coding'), ('Review-Payments', 'Review-Payments'), ('Review-Corresponding', 'Review-Corresponding'), ('Review-Billing', 'Review-Billing'), ('Review-Credential', 'Review-Credential'), ('Organization-Rules', 'Organization-Rules'), ('Ops-Rules', 'Ops-Rules'), ('Sop-Rules', 'Sop-Rules'), ('View-Rules', 'View-Rules'), ('Approvals', 'Approvals'), ('HoldQ', 'HoldQ'), ('Create-Codes', 'Create-Codes'), ('View-Sop-Rules', 'View-Sop-Rules'), ('Custom-Bins', 'Custom-Bins'), ('User-Allocation-Bins-Records', 'User-Allocation-Bins-Records')], max_length=470)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_role_slug', unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stakes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stake_name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_stakes_slug', unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TargetSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_target_slug', unique=True)),
                ('records_target_count', models.PositiveBigIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('total_working_hours', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
