# Generated by Django 5.1.4 on 2025-08-19 05:35

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('records', '0042_alter_codes_project'),
        ('setups', '0038_alter_historicalroles_screens_alter_roles_screens'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalTargetCorrection',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('employee_id', models.CharField(max_length=50)),
                ('employee_name', models.CharField(max_length=100)),
                ('old_target', models.FloatField()),
                ('new_target', models.FloatField()),
                ('final_target', models.FloatField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved_level_1', 'Approved Level 1'), ('approved_level_2', 'Approved Level 2'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('approved_at_level_1', models.DateTimeField(blank=True, null=True)),
                ('approved_at_level_2', models.DateTimeField(blank=True, null=True)),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approved_by_level_1', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setups.usercredentialssetup')),
                ('approved_by_level_2', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setups.usercredentialssetup')),
                ('approver_1', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setups.usercredentialssetup')),
                ('approver_2', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setups.usercredentialssetup')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setups.projects')),
                ('rejected_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setups.usercredentialssetup')),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'historical Target Correction',
                'verbose_name_plural': 'historical Target Corrections',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='TargetCorrection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_id', models.CharField(max_length=50)),
                ('employee_name', models.CharField(max_length=100)),
                ('old_target', models.FloatField()),
                ('new_target', models.FloatField()),
                ('final_target', models.FloatField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved_level_1', 'Approved Level 1'), ('approved_level_2', 'Approved Level 2'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('approved_at_level_1', models.DateTimeField(blank=True, null=True)),
                ('approved_at_level_2', models.DateTimeField(blank=True, null=True)),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('approved_by_level_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_level_1_corrections', to='setups.usercredentialssetup')),
                ('approved_by_level_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_level_2_corrections', to='setups.usercredentialssetup')),
                ('approver_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_corrections_as_approver_1', to='setups.usercredentialssetup')),
                ('approver_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_corrections_as_approver_2', to='setups.usercredentialssetup')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setups.projects')),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rejected_corrections', to='setups.usercredentialssetup')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Target Correction',
                'verbose_name_plural': 'Target Corrections',
                'db_table': 'target_corrections',
            },
        ),
    ]
