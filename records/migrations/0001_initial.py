# Generated by Django 5.1.4 on 2025-05-02 01:52

import autoslug.fields
import django.db.models.deletion
import records.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppsPage',
            fields=[
                ('app_id', models.CharField(default=records.models.generate_unique_short_id, editable=False, max_length=4, primary_key=True, serialize=False)),
                ('app_name', models.CharField(default='unknown', max_length=30)),
                ('organization_id', models.CharField(blank=True, default=None, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClientPage',
            fields=[
                ('client_id', models.CharField(default=records.models.generate_unique_short_id, editable=False, max_length=4, primary_key=True, serialize=False)),
                ('client_name', models.CharField(default='unknown', max_length=200)),
                ('status', models.CharField(default='unknown', max_length=200)),
                ('organization_id', models.CharField(blank=True, default=None, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Codes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_code', models.CharField(max_length=50, unique=True)),
                ('action_codes', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='CredentialsForm',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='DeptartmentPage',
            fields=[
                ('deptartment_id', models.CharField(default=records.models.generate_unique_short_id, editable=False, max_length=4, primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=200)),
                ('organization_id', models.CharField(blank=True, default=None, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FlowChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('flow_data', models.JSONField()),
                ('project', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalFlowChart',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(max_length=100)),
                ('flow_data', models.JSONField()),
                ('project', models.CharField(max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical flow chart',
                'verbose_name_plural': 'historical flow charts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPatientRecordNotes',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('title', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_patient_notes_slug')),
                ('notes_descriptions', models.TextField()),
                ('worked_date', models.DateTimeField(blank=True, editable=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical patient record notes',
                'verbose_name_plural': 'historical patient record notess',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPatientRecordsLogs',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('record_logs_id', models.PositiveIntegerField()),
                ('action', models.CharField(choices=[('ADD', 'Add'), ('UPDATE', 'Update'), ('OPTIONS', 'Options'), ('DELETE', 'Delete')], max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical patient records logs',
                'verbose_name_plural': 'historical patient records logss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRecordsUploadLogs',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('uploaded_file_name', models.TextField(max_length=100)),
                ('new_records_uploaded_count', models.IntegerField(blank=True)),
                ('updated_records_uploaded_count', models.IntegerField(blank=True)),
                ('failed_records', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical records upload logs',
                'verbose_name_plural': 'historical records upload logss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSectorPage',
            fields=[
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('sector_id', models.CharField(db_index=True, default=records.models.generate_unique_short_id, editable=False, max_length=4)),
                ('sector_name', models.CharField(max_length=200)),
                ('apps', models.JSONField(blank=True, default=list)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical sector page',
                'verbose_name_plural': 'historical sector pages',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserCredentials',
            fields=[
                ('baseuser_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(db_index=True, max_length=255)),
                ('password', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('user_type', models.CharField(choices=[('AdminUser', 'AdminUser'), ('StaffUser', 'StaffUser')], default='StaffUser', max_length=255)),
                ('employee_id', models.CharField(db_index=True, max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical user credentials',
                'verbose_name_plural': 'historical User Credentials',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalViewRules1',
            fields=[
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('view_id', models.BigIntegerField(blank=True, db_index=True)),
                ('rule_name', models.CharField(max_length=255)),
                ('deptartment', models.CharField(default='unknown', max_length=255)),
                ('projects', models.JSONField(blank=True, default=list)),
                ('auth', models.CharField(default='unknown', max_length=10)),
                ('action', models.JSONField(blank=True, default=list)),
                ('ageing_bucket', models.CharField(blank=True, max_length=255)),
                ('approvals', models.JSONField(blank=True, default=list)),
                ('text_search_fields', models.JSONField(blank=True, default=list)),
                ('range_filters', models.JSONField(blank=True, default=list)),
                ('rule_category', models.CharField(blank=True, max_length=255)),
                ('rule_status', models.CharField(default=0, max_length=255)),
                ('approval_status', models.CharField(default=0, max_length=255)),
                ('approved_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=255)),
                ('rule_target', models.JSONField(blank=True, default=list)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical view rules1',
                'verbose_name_plural': 'historical view rules1s',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='MappingRecord',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('billing_system_file_name', models.CharField(max_length=200)),
                ('organization_id', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('input_source', models.JSONField(default=dict)),
                ('mrn', models.JSONField(default=dict)),
                ('patient_id', models.JSONField(default=dict)),
                ('account_number', models.JSONField(default=dict)),
                ('visit_number', models.JSONField(default=dict)),
                ('chart_number', models.JSONField(default=dict)),
                ('project_key', models.JSONField(default=dict)),
                ('facility', models.JSONField(default=dict)),
                ('facility_type', models.JSONField(default=dict)),
                ('patient_last_name', models.JSONField(default=dict)),
                ('patient_first_name', models.JSONField(default=dict)),
                ('patient_phone', models.JSONField(default=dict)),
                ('patient_address', models.JSONField(default=dict)),
                ('patient_city', models.JSONField(default=dict)),
                ('patient_state', models.JSONField(default=dict)),
                ('patient_zip', models.JSONField(default=dict)),
                ('patient_birthday', models.JSONField(default=dict)),
                ('patient_gender', models.JSONField(default=dict)),
                ('subscriber_last_name', models.JSONField(default=dict)),
                ('subscriber_first_name', models.JSONField(default=dict)),
                ('subscriber_relationship', models.JSONField(default=dict)),
                ('subscriber_phone', models.JSONField(default=dict)),
                ('subscriber_address', models.JSONField(default=dict)),
                ('subscriber_city', models.JSONField(default=dict)),
                ('subscriber_state', models.JSONField(default=dict)),
                ('subscriber_zip', models.JSONField(default=dict)),
                ('subscriber_birthday', models.JSONField(default=dict)),
                ('subscriber_gender', models.JSONField(default=dict)),
                ('current_billed_financial_class', models.JSONField(default=dict)),
                ('current_billed_payer_name', models.JSONField(default=dict)),
                ('member_id_current_billed_payer', models.JSONField(default=dict)),
                ('group_number_current_billed_payer', models.JSONField(default=dict)),
                ('current_billed_relationship', models.JSONField(default=dict)),
                ('cob', models.JSONField(default=dict)),
                ('payer_id_current_billed_payer', models.JSONField(default=dict)),
                ('timely_filing_limit', models.JSONField(default=dict)),
                ('appeal_limit', models.JSONField(default=dict)),
                ('primary_payer_financial_class', models.JSONField(default=dict)),
                ('primary_payer_name', models.JSONField(default=dict)),
                ('member_id_primary_payer', models.JSONField(default=dict)),
                ('group_number_primary_payer', models.JSONField(default=dict)),
                ('relationship_primary_payer', models.JSONField(default=dict)),
                ('cob_primary', models.JSONField(default=dict)),
                ('payer_id_primary_payer', models.JSONField(default=dict)),
                ('secondary_payer_financial_class', models.JSONField(default=dict)),
                ('secondary_payer_name', models.JSONField(default=dict)),
                ('member_id_secondary_payer', models.JSONField(default=dict)),
                ('group_number_secondary_payer', models.JSONField(default=dict)),
                ('relationship_secondary_payer', models.JSONField(default=dict)),
                ('cob_secondary', models.JSONField(default=dict)),
                ('payer_id_secondary_payer', models.JSONField(default=dict)),
                ('tertiary_payer_financial_class', models.JSONField(default=dict)),
                ('tertiary_payer_name', models.JSONField(default=dict)),
                ('member_id_tertiary_payer', models.JSONField(default=dict)),
                ('group_number_tertiary_payer', models.JSONField(default=dict)),
                ('relationship_tertiary_payer', models.JSONField(default=dict)),
                ('cob_tertiary', models.JSONField(default=dict)),
                ('payer_id_tertiary_payer', models.JSONField(default=dict)),
                ('auth_number', models.JSONField(default=dict)),
                ('claim_number', models.JSONField(default=dict)),
                ('facility_code', models.JSONField(default=dict)),
                ('claim_frequency_type', models.JSONField(default=dict)),
                ('signature', models.JSONField(default=dict)),
                ('assignment_code', models.JSONField(default=dict)),
                ('assign_certification', models.JSONField(default=dict)),
                ('release_info_code', models.JSONField(default=dict)),
                ('service_date', models.JSONField(default=dict)),
                ('van_trace_number', models.JSONField(default=dict)),
                ('rendering_provider_id', models.JSONField(default=dict)),
                ('taxonomy_code', models.JSONField(default=dict)),
                ('procedure_code', models.JSONField(default=dict)),
                ('amount', models.JSONField(default=dict)),
                ('procedure_count', models.JSONField(default=dict)),
                ('tooth_code', models.JSONField(default=dict)),
                ('procedure_code2', models.JSONField(default=dict)),
                ('amount2', models.JSONField(default=dict)),
                ('procedure_count2', models.JSONField(default=dict)),
                ('tooth_code2', models.JSONField(default=dict)),
                ('procedure_code3', models.JSONField(default=dict)),
                ('amount3', models.JSONField(default=dict)),
                ('procedure_count3', models.JSONField(default=dict)),
                ('tooth_code3', models.JSONField(default=dict)),
                ('procedure_code4', models.JSONField(default=dict)),
                ('amount4', models.JSONField(default=dict)),
                ('procedure_count4', models.JSONField(default=dict)),
                ('tooth_code4', models.JSONField(default=dict)),
                ('dx1', models.JSONField(default=dict)),
                ('dx2', models.JSONField(default=dict)),
                ('dx3', models.JSONField(default=dict)),
                ('dx4', models.JSONField(default=dict)),
                ('dx5', models.JSONField(default=dict)),
                ('dx6', models.JSONField(default=dict)),
                ('total_charged', models.JSONField(default=dict)),
                ('check_number', models.JSONField(default=dict)),
                ('insurance_balance', models.JSONField(default=dict)),
                ('patient_balance', models.JSONField(default=dict)),
                ('contract_name', models.JSONField(default=dict)),
                ('division', models.JSONField(default=dict)),
                ('type_of_service', models.JSONField(default=dict)),
                ('current_queue', models.JSONField(blank=True, default=dict)),
                ('queue_days', models.JSONField(blank=True, default=dict)),
                ('latest_action_date', models.JSONField(blank=True, default=dict)),
                ('next_follow_up_before', models.JSONField(blank=True, default=dict)),
                ('claim_denial_date', models.JSONField(default=dict)),
                ('claim_denial_code', models.JSONField(default=dict)),
                ('claim_denial_description', models.JSONField(default=dict)),
                ('latest_pay_date', models.JSONField(blank=True, default=dict)),
                ('latest_pay_amount', models.JSONField(blank=True, default=dict)),
                ('claim_priority', models.JSONField(blank=True, default=dict)),
                ('category', models.JSONField(blank=True, default=dict)),
                ('sub_category', models.JSONField(blank=True, default=dict)),
                ('status', models.JSONField(blank=True, default=dict)),
                ('action', models.JSONField(blank=True, default=dict)),
                ('provider_name', models.JSONField(blank=True, default=dict)),
                ('provider_npi', models.JSONField(blank=True, default=dict)),
                ('provider_location', models.JSONField(blank=True, default=dict)),
                ('assigned_to', models.JSONField(blank=True, default=dict)),
                ('last_claim_status_check_date', models.JSONField(blank=True, default=dict)),
                ('last_ev_check_date', models.JSONField(blank=True, default=dict)),
                ('last_ins_disc_check_date', models.JSONField(blank=True, default=dict)),
                ('under_pay', models.JSONField(blank=True, default=dict)),
                ('csv_headers', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PatientRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_source', models.TextField()),
                ('mrn', models.TextField()),
                ('patient_id', models.TextField()),
                ('account_number', models.CharField(max_length=200)),
                ('visit_number', models.TextField()),
                ('chart_number', models.TextField()),
                ('project_key', models.TextField()),
                ('facility', models.TextField()),
                ('facility_type', models.TextField()),
                ('patient_last_name', models.TextField()),
                ('patient_first_name', models.TextField()),
                ('patient_phone', models.TextField()),
                ('patient_address', models.TextField()),
                ('patient_city', models.TextField()),
                ('patient_state', models.TextField()),
                ('patient_zip', models.TextField()),
                ('patient_birthday', models.TextField()),
                ('patient_gender', models.TextField()),
                ('subscriber_last_name', models.TextField()),
                ('subscriber_first_name', models.TextField()),
                ('subscriber_relationship', models.TextField()),
                ('subscriber_phone', models.TextField()),
                ('subscriber_address', models.TextField()),
                ('subscriber_city', models.TextField()),
                ('subscriber_state', models.TextField()),
                ('subscriber_zip', models.TextField()),
                ('subscriber_birthday', models.TextField()),
                ('subscriber_gender', models.TextField()),
                ('current_billed_financial_class', models.TextField()),
                ('current_billed_payer_name', models.TextField()),
                ('member_id_current_billed_payer', models.TextField()),
                ('group_number_current_billed_payer', models.TextField()),
                ('current_billed_relationship', models.TextField()),
                ('cob', models.TextField()),
                ('payer_id_current_billed_payer', models.TextField()),
                ('timely_filing_limit', models.CharField(max_length=200)),
                ('appeal_limit', models.CharField(max_length=200)),
                ('primary_payer_financial_class', models.TextField()),
                ('primary_payer_name', models.TextField()),
                ('member_id_primary_payer', models.TextField()),
                ('group_number_primary_payer', models.TextField()),
                ('relationship_primary_payer', models.TextField()),
                ('cob_primary', models.TextField()),
                ('payer_id_primary_payer', models.TextField()),
                ('secondary_payer_financial_class', models.TextField()),
                ('secondary_payer_name', models.TextField()),
                ('member_id_secondary_payer', models.TextField()),
                ('group_number_secondary_payer', models.TextField()),
                ('relationship_secondary_payer', models.TextField()),
                ('cob_secondary', models.TextField()),
                ('payer_id_secondary_payer', models.TextField()),
                ('tertiary_payer_financial_class', models.TextField()),
                ('tertiary_payer_name', models.CharField(max_length=100)),
                ('member_id_tertiary_payer', models.CharField(max_length=200)),
                ('group_number_tertiary_payer', models.CharField(max_length=200)),
                ('relationship_tertiary_payer', models.CharField(max_length=200)),
                ('cob_tertiary', models.CharField(max_length=200)),
                ('payer_id_tertiary_payer', models.CharField(max_length=200)),
                ('auth_number', models.TextField()),
                ('claim_number', models.CharField(max_length=200)),
                ('facility_code', models.CharField(max_length=200)),
                ('claim_frequency_type', models.CharField(max_length=200)),
                ('signature', models.CharField(max_length=200)),
                ('assignment_code', models.CharField(max_length=200)),
                ('assign_certification', models.CharField(max_length=200)),
                ('release_info_code', models.CharField(max_length=200)),
                ('service_date', models.DateField()),
                ('van_trace_number', models.CharField(max_length=200)),
                ('rendering_provider_id', models.CharField(max_length=200)),
                ('taxonomy_code', models.CharField(max_length=200)),
                ('procedure_code', models.CharField(max_length=200)),
                ('amount', models.CharField(max_length=200)),
                ('procedure_count', models.CharField(max_length=200)),
                ('tooth_code', models.CharField(max_length=200)),
                ('procedure_code2', models.CharField(blank=True, max_length=200, null=True)),
                ('amount2', models.CharField(blank=True, max_length=200, null=True)),
                ('procedure_count2', models.CharField(blank=True, max_length=200, null=True)),
                ('tooth_code2', models.CharField(blank=True, max_length=200, null=True)),
                ('procedure_code3', models.CharField(blank=True, max_length=200, null=True)),
                ('amount3', models.CharField(blank=True, max_length=200, null=True)),
                ('procedure_count3', models.CharField(blank=True, max_length=200, null=True)),
                ('tooth_code3', models.CharField(blank=True, max_length=200, null=True)),
                ('procedure_code4', models.CharField(blank=True, max_length=200, null=True)),
                ('amount4', models.CharField(blank=True, max_length=200, null=True)),
                ('procedure_count4', models.CharField(blank=True, max_length=100, null=True)),
                ('tooth_code4', models.CharField(blank=True, max_length=200, null=True)),
                ('dx1', models.CharField(blank=True, max_length=200, null=True)),
                ('dx2', models.CharField(blank=True, max_length=200, null=True)),
                ('dx3', models.CharField(blank=True, max_length=200, null=True)),
                ('dx4', models.CharField(blank=True, max_length=200, null=True)),
                ('dx5', models.CharField(blank=True, max_length=200, null=True)),
                ('dx6', models.CharField(blank=True, max_length=200, null=True)),
                ('total_charged', models.CharField(max_length=200)),
                ('check_number', models.CharField(blank=True, max_length=200, null=True)),
                ('insurance_balance', models.CharField(blank=True, max_length=200, null=True)),
                ('patient_balance', models.CharField(blank=True, max_length=200, null=True)),
                ('contract_name', models.CharField(max_length=100)),
                ('division', models.CharField(max_length=200)),
                ('type_of_service', models.CharField(max_length=200)),
                ('current_queue', models.JSONField(blank=True, default=dict)),
                ('queue_days', models.CharField(max_length=200)),
                ('latest_action_date', models.CharField(max_length=200)),
                ('next_follow_up_before', models.CharField(max_length=200)),
                ('claim_denial_date', models.CharField(max_length=200)),
                ('claim_denial_code', models.CharField(max_length=200)),
                ('claim_denial_description', models.CharField(max_length=200)),
                ('latest_pay_date', models.CharField(max_length=200)),
                ('latest_pay_amount', models.CharField(max_length=200)),
                ('claim_priority', models.CharField(max_length=200)),
                ('category', models.CharField(max_length=200)),
                ('sub_category', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=200)),
                ('action', models.CharField(max_length=200)),
                ('provider_name', models.CharField(max_length=100)),
                ('provider_npi', models.CharField(max_length=200)),
                ('provider_location', models.CharField(max_length=100)),
                ('last_claim_status_check_date', models.CharField(max_length=200)),
                ('last_ev_check_date', models.CharField(max_length=200)),
                ('last_ins_disc_check_date', models.CharField(max_length=200)),
                ('under_pay', models.CharField(blank=True, max_length=200, null=True)),
                ('project_id', models.CharField(blank=True, max_length=200, null=True)),
                ('organization_id', models.CharField(blank=True, max_length=200, null=True)),
                ('allocation_fresh', models.BooleanField(default=True)),
                ('allocation_allocated', models.BooleanField(default=False)),
                ('allocation_worked', models.BooleanField(default=False)),
                ('current_user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('allocated_date', models.DateTimeField(blank=True, null=True)),
                ('worked_date', models.DateTimeField(blank=True, null=True)),
                ('ageing_bucket', models.CharField(blank=True, max_length=200, null=True)),
                ('allocation_status', models.BooleanField(default=False)),
                ('allocated_to', models.JSONField(blank=True, default=dict)),
                ('hold_status', models.BooleanField(default=False)),
                ('hold', models.JSONField(blank=True, default=dict)),
                ('review_status', models.BooleanField(default=False)),
                ('review_by', models.JSONField(blank=True, default=dict)),
                ('executive_status', models.BooleanField(default=False)),
                ('executive_bin', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='PatientRecordNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_custom_patient_notes_slug', unique=True)),
                ('notes_descriptions', models.TextField()),
                ('worked_date', models.DateTimeField(auto_now=True)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_source', models.TextField()),
                ('mrn', models.TextField()),
                ('patient_id', models.TextField()),
                ('account_number', models.CharField(max_length=200)),
                ('visit_number', models.TextField()),
                ('chart_number', models.TextField()),
                ('project_key', models.TextField()),
                ('facility', models.TextField()),
                ('facility_type', models.TextField()),
                ('patient_last_name', models.TextField()),
                ('patient_first_name', models.TextField()),
                ('patient_phone', models.TextField()),
                ('patient_address', models.TextField()),
                ('patient_city', models.TextField()),
                ('patient_state', models.TextField()),
                ('patient_zip', models.TextField()),
                ('patient_birthday', models.TextField()),
                ('patient_gender', models.TextField()),
                ('subscriber_last_name', models.TextField()),
                ('subscriber_first_name', models.TextField()),
                ('subscriber_relationship', models.TextField()),
                ('subscriber_phone', models.TextField()),
                ('subscriber_address', models.TextField()),
                ('subscriber_city', models.TextField()),
                ('subscriber_state', models.TextField()),
                ('subscriber_zip', models.TextField()),
                ('subscriber_birthday', models.TextField()),
                ('subscriber_gender', models.TextField()),
                ('current_billed_financial_class', models.TextField()),
                ('current_billed_payer_name', models.TextField()),
                ('member_id_current_billed_payer', models.TextField()),
                ('group_number_current_billed_payer', models.TextField()),
                ('current_billed_relationship', models.TextField()),
                ('cob', models.TextField()),
                ('payer_id_current_billed_payer', models.TextField()),
                ('timely_filing_limit', models.IntegerField(default=0)),
                ('appeal_limit', models.IntegerField(default=0)),
                ('primary_payer_financial_class', models.TextField()),
                ('primary_payer_name', models.TextField()),
                ('member_id_primary_payer', models.TextField()),
                ('group_number_primary_payer', models.TextField()),
                ('relationship_primary_payer', models.TextField()),
                ('cob_primary', models.TextField()),
                ('payer_id_primary_payer', models.TextField()),
                ('secondary_payer_financial_class', models.TextField()),
                ('secondary_payer_name', models.TextField()),
                ('member_id_secondary_payer', models.TextField()),
                ('group_number_secondary_payer', models.TextField()),
                ('relationship_secondary_payer', models.TextField()),
                ('cob_secondary', models.TextField()),
                ('payer_id_secondary_payer', models.TextField()),
                ('tertiary_payer_financial_class', models.TextField()),
                ('tertiary_payer_name', models.CharField(max_length=225)),
                ('member_id_tertiary_payer', models.CharField(max_length=125)),
                ('group_number_tertiary_payer', models.CharField(max_length=125)),
                ('relationship_tertiary_payer', models.CharField(max_length=125)),
                ('cob_tertiary', models.CharField(max_length=125)),
                ('payer_id_tertiary_payer', models.CharField(max_length=125)),
                ('auth_number', models.TextField()),
                ('claim_number', models.CharField(max_length=125)),
                ('facility_code', models.CharField(max_length=125)),
                ('claim_frequency_type', models.CharField(max_length=125)),
                ('signature', models.CharField(max_length=225)),
                ('assignment_code', models.CharField(max_length=125)),
                ('assign_certification', models.CharField(max_length=225)),
                ('release_info_code', models.CharField(max_length=125)),
                ('van_trace_number', models.PositiveIntegerField(default=0)),
                ('rendering_provider_id', models.CharField(max_length=225)),
                ('taxonomy_code', models.CharField(max_length=225)),
                ('procedure_code', models.CharField(max_length=225)),
                ('tooth_code', models.CharField(max_length=125)),
                ('tooth_code2', models.CharField(blank=True, max_length=125, null=True)),
                ('tooth_code3', models.CharField(blank=True, max_length=125, null=True)),
                ('tooth_code4', models.CharField(blank=True, max_length=125, null=True)),
                ('procedure_count', models.IntegerField(default=0)),
                ('procedure_count2', models.IntegerField(default=0)),
                ('procedure_count3', models.IntegerField(default=0)),
                ('procedure_count4', models.IntegerField(default=0)),
                ('procedure_code2', models.CharField(blank=True, max_length=200, null=True)),
                ('procedure_code3', models.CharField(blank=True, max_length=200, null=True)),
                ('procedure_code4', models.CharField(blank=True, max_length=200, null=True)),
                ('dx1', models.CharField(blank=True, max_length=125, null=True)),
                ('dx2', models.CharField(blank=True, max_length=125, null=True)),
                ('dx3', models.CharField(blank=True, max_length=125, null=True)),
                ('dx4', models.CharField(blank=True, max_length=125, null=True)),
                ('dx5', models.CharField(blank=True, max_length=125, null=True)),
                ('dx6', models.CharField(blank=True, max_length=125, null=True)),
                ('check_number', models.CharField(blank=True, max_length=125, null=True)),
                ('amount', models.DecimalField(decimal_places=10, default=0.0, max_digits=20)),
                ('amount2', models.DecimalField(decimal_places=10, default=0.0, max_digits=20)),
                ('amount3', models.DecimalField(decimal_places=10, default=0.0, max_digits=20)),
                ('amount4', models.DecimalField(decimal_places=10, default=0.0, max_digits=20)),
                ('total_charged', models.DecimalField(decimal_places=10, default=0.0, max_digits=20)),
                ('insurance_balance', models.DecimalField(decimal_places=10, default=0.0, max_digits=20)),
                ('patient_balance', models.DecimalField(decimal_places=10, default=0.0, max_digits=20)),
                ('contract_name', models.CharField(max_length=100)),
                ('division', models.CharField(max_length=125)),
                ('type_of_service', models.CharField(max_length=225)),
                ('queue_days', models.PositiveIntegerField(default=0)),
                ('latest_action_date', models.DateField(blank=True, null=True)),
                ('next_follow_up_before', models.DateField(blank=True, null=True)),
                ('claim_denial_date', models.DateField(blank=True, null=True)),
                ('claim_denial_code', models.CharField(max_length=125)),
                ('claim_denial_description', models.TextField()),
                ('latest_pay_date', models.DateField(blank=True, null=True)),
                ('latest_pay_amount', models.DecimalField(decimal_places=10, default=0.0, max_digits=20)),
                ('claim_priority', models.CharField(max_length=225)),
                ('category', models.CharField(max_length=225)),
                ('sub_category', models.CharField(max_length=225)),
                ('status', models.CharField(max_length=225)),
                ('action', models.CharField(max_length=225)),
                ('provider_name', models.CharField(max_length=225)),
                ('provider_npi', models.CharField(max_length=225)),
                ('provider_location', models.CharField(max_length=455)),
                ('last_claim_status_check_date', models.DateField(blank=True, null=True)),
                ('last_ev_check_date', models.DateField(blank=True, null=True)),
                ('last_ins_disc_check_date', models.DateField(blank=True, null=True)),
                ('under_pay', models.DecimalField(decimal_places=10, default=0.0, max_digits=20)),
                ('project_id', models.CharField(max_length=225)),
                ('organization_id', models.CharField(max_length=225)),
                ('allocation_worked', models.BooleanField(default=False)),
                ('worked_date', models.DateTimeField(blank=True, null=True)),
                ('service_date', models.DateField()),
                ('ageing_bucket', models.CharField(blank=True, max_length=225, null=True)),
                ('allocation_fresh', models.BooleanField(default=True)),
                ('current_queue', models.JSONField(blank=True, default=dict)),
                ('hold_status', models.BooleanField(default=False)),
                ('hold_days', models.PositiveIntegerField(blank=True, null=True)),
                ('review_status', models.BooleanField(default=False)),
                ('review_bin_headers', models.CharField(blank=True, max_length=125, null=True)),
                ('allocation_status', models.BooleanField(default=False)),
                ('allocated_date', models.DateTimeField(blank=True, null=True)),
                ('allocation_allocated', models.BooleanField(default=False)),
                ('custom_bin_applied_status', models.BooleanField(default=False)),
                ('executive_status', models.BooleanField(default=False)),
                ('executive_bin', models.CharField(blank=True, max_length=125, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PatientRecordsLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('record_logs_id', models.PositiveIntegerField()),
                ('action', models.CharField(choices=[('ADD', 'Add'), ('UPDATE', 'Update'), ('OPTIONS', 'Options'), ('DELETE', 'Delete')], max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectPage',
            fields=[
                ('project_id', models.CharField(default=records.models.generate_unique_short_id, editable=False, max_length=4, primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=200)),
                ('clients', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(default='unknown', max_length=100)),
                ('organization_id', models.CharField(blank=True, default=None, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecordNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.CharField(max_length=255)),
                ('notes', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user_name', models.CharField(max_length=255)),
                ('status_code', models.TextField(blank=True, null=True)),
                ('action_code', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecordsUploadLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uploaded_file_name', models.FileField(upload_to='media/uploaded_patient_records')),
                ('new_records_uploaded_count', models.IntegerField(blank=True)),
                ('updated_records_uploaded_count', models.IntegerField(blank=True)),
                ('failed_records', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RolesPage',
            fields=[
                ('role_id', models.CharField(default=records.models.generate_unique_short_id, editable=False, max_length=4, primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=200)),
                ('screens', models.JSONField(blank=True, default=list)),
                ('organization_id', models.CharField(blank=True, default=None, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RuleVersions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_id', models.IntegerField()),
                ('approved_by', models.CharField(max_length=150)),
                ('descripation', models.TextField(max_length=150)),
                ('author', models.CharField(max_length=150)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SectorPage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sector_id', models.CharField(default=records.models.generate_unique_short_id, editable=False, max_length=4, primary_key=True, serialize=False)),
                ('sector_name', models.CharField(max_length=200)),
                ('apps', models.JSONField(blank=True, default=list)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StakePage',
            fields=[
                ('stake_id', models.CharField(default=records.models.generate_unique_short_id, editable=False, max_length=4, primary_key=True, serialize=False)),
                ('stake_name', models.CharField(default='unknown', max_length=30)),
                ('organization_id', models.CharField(blank=True, default=None, max_length=30, null=True)),
            ],
        ),
    ]
