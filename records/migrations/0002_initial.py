# Generated by Django 5.1.4 on 2025-05-02 01:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('records', '0001_initial'),
        ('setups', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkFlowHeaders',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('source_of_status', models.TextField()),
                ('clearing_house_comment', models.TextField()),
                ('insurance_name', models.TextField()),
                ('clearing_house_name', models.TextField()),
                ('insurance_phone', models.TextField()),
                ('rep_name', models.TextField()),
                ('website_name', models.TextField()),
                ('processed_date', models.DateField()),
                ('paid_date', models.DateField()),
                ('allowed_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deductible_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('coinsurance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('copayment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mode_of_payment', models.TextField()),
                ('check_number', models.TextField()),
                ('transaction_id', models.TextField()),
                ('is_single_bulk_payment', models.BooleanField()),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('check_mailing_address', models.TextField()),
                ('is_check_paid_on_correct_address', models.BooleanField()),
                ('is_check_cashed', models.BooleanField()),
                ('is_payment_cleared', models.BooleanField()),
                ('encashment_date', models.DateField(blank=True, null=True)),
                ('is_paid_date_crossed_45_days', models.BooleanField()),
                ('tat_for_encashment_of_payment', models.IntegerField()),
                ('rep_agrees_to_run_check_tracer', models.BooleanField()),
                ('tat_for_check_tracer', models.IntegerField()),
                ('reason_for_not_sending_request_for_check_tracer', models.TextField(blank=True, null=True)),
                ('rep_agrees_to_reissue_new_check', models.BooleanField()),
                ('rep_agrees_to_reissue_new_payment', models.BooleanField()),
                ('tat_to_receive_new_payment', models.IntegerField()),
                ('reason_for_not_reissuing_new_payment', models.TextField(blank=True, null=True)),
                ('w9_form_requested', models.BooleanField()),
                ('fax_provided', models.BooleanField()),
                ('fax', models.TextField(blank=True, null=True)),
                ('eob_available_on_website', models.BooleanField()),
                ('mailing_address', models.TextField(blank=True, null=True)),
                ('source_to_get_eob', models.TextField()),
                ('website_name_link', models.TextField()),
                ('additional_comment', models.TextField(blank=True, null=True)),
                ('claim_number', models.TextField()),
                ('call_reference', models.TextField()),
            ],
        ),
        migrations.AddField(
            model_name='codes',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_project', to='setups.projects'),
        ),
        migrations.AddField(
            model_name='credentialsform',
            name='app',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.appspage'),
        ),
        migrations.AddField(
            model_name='credentialsform',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.clientpage'),
        ),
        migrations.AddField(
            model_name='credentialsform',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.deptartmentpage'),
        ),
        migrations.AddField(
            model_name='flowchart',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='flowchart',
            name='status_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flow_chart_status_code', to='records.codes'),
        ),
        migrations.AddField(
            model_name='flowchart',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='historicalflowchart',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='historicalflowchart',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalflowchart',
            name='status_code',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='records.codes'),
        ),
        migrations.AddField(
            model_name='historicalflowchart',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='historicalpatientrecordnotes',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='historicalpatientrecordnotes',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalpatientrecordnotes',
            name='note_writer',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalpatientrecordnotes',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='historicalpatientrecordslogs',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='historicalpatientrecordslogs',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalpatientrecordslogs',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='historicalrecordsuploadlogs',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='historicalrecordsuploadlogs',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalrecordsuploadlogs',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='historicalsectorpage',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='historicalsectorpage',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalsectorpage',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='historicalusercredentials',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='historicalusercredentials',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalusercredentials',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='historicalviewrules1',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='historicalviewrules1',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalviewrules1',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='patientrecord',
            name='assigned_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='patientrecord',
            name='assigned_to',
            field=models.ManyToManyField(blank=True, related_name='records_assigned_to_dummy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='patientrecordnotes',
            name='codes',
            field=models.ManyToManyField(related_name='patient_records_code', to='records.codes'),
        ),
        migrations.AddField(
            model_name='patientrecordnotes',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='patientrecordnotes',
            name='note_writer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_records_note_writer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='patientrecordnotes',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='patientrecords',
            name='allocated_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allocated_to_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='patientrecords',
            name='assigned_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_by_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='patientrecords',
            name='assigned_to',
            field=models.ManyToManyField(blank=True, related_name='records_assigned_to_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='patientrecords',
            name='custom_bin_applied',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custom_bins_applied_records_set', to='setups.custombins'),
        ),
        migrations.AddField(
            model_name='patientrecords',
            name='review_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='review_by_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='patientrecords',
            name='session_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_login_session_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='patientrecordnotes',
            name='patient_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_record_notes', to='records.patientrecords'),
        ),
        migrations.AddField(
            model_name='historicalpatientrecordslogs',
            name='patient_record',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='records.patientrecords'),
        ),
        migrations.AddField(
            model_name='historicalpatientrecordnotes',
            name='patient_record',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='records.patientrecords'),
        ),
        migrations.AddField(
            model_name='patientrecordslogs',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='patientrecordslogs',
            name='patient_record',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='records.patientrecords'),
        ),
        migrations.AddField(
            model_name='patientrecordslogs',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='projectpage',
            name='billing_system',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ProjectPage', to='records.mappingrecord'),
        ),
        migrations.AddField(
            model_name='credentialsform',
            name='project',
            field=models.ManyToManyField(related_name='crediantials', to='records.projectpage'),
        ),
        migrations.AddField(
            model_name='recordsuploadlogs',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='recordsuploadlogs',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='credentialsform',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.rolespage'),
        ),
        migrations.AddField(
            model_name='sectorpage',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='sectorpage',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='credentialsform',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.sectorpage'),
        ),
        migrations.AddField(
            model_name='clientpage',
            name='sector_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients', to='records.sectorpage'),
        ),
        migrations.AddField(
            model_name='credentialsform',
            name='stake',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.stakepage'),
        ),
        migrations.CreateModel(
            name='UserCredentials',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('employee_id', models.CharField(max_length=255, unique=True)),
                ('apps', models.ManyToManyField(related_name='user_credentials_apps', to='records.appspage')),
                ('clients', models.ManyToManyField(related_name='user_credentials_clients', to='records.clientpage')),
                ('departments', models.ManyToManyField(related_name='user_credentials_departments', to='records.deptartmentpage')),
                ('projects', models.ManyToManyField(related_name='user_credentials_projects', to='records.projectpage')),
                ('roles', models.ManyToManyField(related_name='user_credentials_roles', to='records.rolespage')),
                ('sectors', models.ManyToManyField(related_name='user_credentials_sectors', to='records.sectorpage')),
                ('stakes', models.ManyToManyField(related_name='user_credentials_stakes', to='records.stakepage')),
            ],
            options={
                'verbose_name_plural': 'User Credentials',
            },
            bases=('users.baseuser',),
        ),
        migrations.CreateModel(
            name='ViewRules1',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rule_name', models.CharField(max_length=255)),
                ('deptartment', models.CharField(default='unknown', max_length=255)),
                ('projects', models.JSONField(blank=True, default=list)),
                ('auth', models.CharField(default='unknown', max_length=10)),
                ('action', models.JSONField(blank=True, default=list)),
                ('ageing_bucket', models.CharField(blank=True, max_length=255)),
                ('approvals', models.JSONField(blank=True, default=list)),
                ('text_search_fields', models.JSONField(blank=True, default=list)),
                ('range_filters', models.JSONField(blank=True, default=list)),
                ('rule_category', models.CharField(blank=True, max_length=255)),
                ('rule_status', models.CharField(default=0, max_length=255)),
                ('approval_status', models.CharField(default=0, max_length=255)),
                ('approved_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=255)),
                ('rule_target', models.JSONField(blank=True, default=list)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
